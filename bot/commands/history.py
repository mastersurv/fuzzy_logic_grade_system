from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from bot.handlers.states import ViewHistory
from bot.keyboards.history import get_history_keyboard
from bot.database.database import get_student_grades, get_or_create_student

router = Router()

@router.message(Command("history"))
@router.message(F.text == "üìú –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –æ—Ü–µ–Ω–æ–∫")
async def cmd_history(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /history –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
    """
    # –û—Ç–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞
    student = await get_or_create_student(
        telegram_id=message.from_user.id,
        username=message.from_user.username,
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –æ—Ü–µ–Ω–æ–∫
    grades = await get_student_grades(student.id)
    
    if not grades:
        await message.answer(
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ü–µ–Ω–æ–∫. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /grade, —á—Ç–æ–±—ã –æ—Ü–µ–Ω–∏—Ç—å –∑–Ω–∞–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞."
        )
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏—Å—Ç–æ—Ä–∏–µ–π –æ—Ü–µ–Ω–æ–∫
    history_text = "üìú <b>–ò—Å—Ç–æ—Ä–∏—è –æ—Ü–µ–Ω–æ–∫</b>\n\n"
    
    for i, grade in enumerate(grades, 1):
        history_text += (
            f"<b>{i}. –î–∞—Ç–∞:</b> {grade.created_at.strftime('%Y-%m-%d %H:%M:%S')}\n"
            f"‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ: {grade.quality}/10\n"
            f"‚Ä¢ –¢–æ—á–Ω–æ—Å—Ç—å: {grade.accuracy}/10\n"
            f"‚Ä¢ –°—Ä–æ–∫–∏: {grade.deadline}/10\n"
            f"‚Ä¢ –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞: {grade.numeric_grade:.2f}/10 ({grade.text_grade})\n\n"
        )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å—Ç–æ—Ä–∏–µ–π –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await message.answer(
        history_text,
        parse_mode="HTML",
        reply_markup=get_history_keyboard()
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏
    await state.set_state(ViewHistory.viewing) 